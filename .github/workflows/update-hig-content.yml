name: Update HIG Content

on:
  schedule:
    # Run every 4 months on the 1st at 2 AM UTC (avoids peak usage times)
    - cron: '0 2 1 */4 *'
  workflow_dispatch:
    # Allow manual triggering for immediate updates
    inputs:
      force_update:
        description: 'Force update all content (ignore cache)'
        required: false
        default: false
        type: boolean

jobs:
  generate-content:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build TypeScript
        run: npm run build
      
      - name: Create content directory
        run: mkdir -p content/{platforms,metadata,images}
      
      - name: Generate HIG content
        run: |
          npm run generate-content
        env:
          FORCE_UPDATE: ${{ inputs.force_update }}
          NODE_ENV: production
      
      - name: Validate generated content
        run: npm run validate-content
      
      - name: Check for content changes
        id: changes
        run: |
          git add content/
          if git diff --cached --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No content changes detected"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Content changes detected"
          fi
      
      - name: Generate content summary
        if: steps.changes.outputs.has_changes == 'true'
        id: summary
        run: |
          echo "## HIG Content Update Summary" > update_summary.md
          echo "" >> update_summary.md
          echo "**Generated on:** $(date -u)" >> update_summary.md
          echo "**Total files:** $(find content/ -name '*.md' | wc -l)" >> update_summary.md
          echo "**Total size:** $(du -sh content/ | cut -f1)" >> update_summary.md
          echo "" >> update_summary.md
          echo "### Changed Files:" >> update_summary.md
          git diff --cached --name-only | grep -E '\.(md|json)$' | head -20 >> update_summary.md
          
          # Store summary for later use
          echo 'SUMMARY<<EOF' >> $GITHUB_OUTPUT
          cat update_summary.md >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
      
      - name: Commit and push changes
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "HIG Content Updater"
          git add content/
          git commit -m "Update HIG content - $(date -u '+%Y-%m-%d')"
          git push
      
      
      - name: Report success
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          echo "‚úÖ HIG content successfully updated!"
          echo "üìä Files generated: $(find content/ -name '*.md' | wc -l)"
          echo "üíæ Total size: $(du -sh content/ | cut -f1)"
      
      - name: Report no changes
        if: steps.changes.outputs.has_changes == 'false'
        run: echo "‚ÑπÔ∏è No content changes detected - HIG content is up to date!"
      
      - name: Upload content as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: hig-content-${{ github.run_number }}
          path: content/
          retention-days: 30
      

  health-check:
    needs: generate-content
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build project
        run: npm run build
      
      - name: Run health checks
        run: |
          npm run health-check
          npm test
          npm run lint
      
