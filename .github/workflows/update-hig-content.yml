name: Content Validation

on:
  schedule:
    # Run monthly to validate static content integrity
    - cron: '0 2 1 * *'
  workflow_dispatch:
    # Allow manual validation
    inputs:
      force_validation:
        description: 'Force complete validation'
        required: false
        default: false
        type: boolean

jobs:
  validate-content:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build project
        run: npm run build
      
      - name: Run tests
        run: npm test
      
      - name: Validate content structure
        run: npm run validate-content
      
      - name: Content statistics
        run: |
          echo "## Content Validation Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Validation date:** $(date -u)" >> $GITHUB_STEP_SUMMARY
          echo "**Static content files:** $(find content/ -name '*.md' | wc -l)" >> $GITHUB_STEP_SUMMARY
          echo "**Total content size:** $(du -sh content/ | cut -f1)" >> $GITHUB_STEP_SUMMARY
          echo "**Search index size:** $(du -sh content/metadata/ | cut -f1)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… All static content validated successfully!" >> $GITHUB_STEP_SUMMARY
      
      - name: Upload validation report
        uses: actions/upload-artifact@v4
        with:
          name: content-validation-${{ github.run_number }}
          path: |
            content/metadata/
            *.log
          retention-days: 7

  # Future: When content updates are needed, this can be done manually
  # with simple HTTP scraping utilities, not browser automation